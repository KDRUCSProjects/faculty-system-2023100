components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]

      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Student:
      type: object
      properties:
        id:
          type: string
        kankorId:
          type: string
        fullName:
          type: string
        nickName:
          type: string
        fatherName:
          type: string
        grandFatherName:
          type: string
        province:
          type: string
        division:
          type: string
        district:
          type: string
        engName:
          type: string
        engFatherName:
          type: string
        engGrandFatherName:
          type: string
        educationalYearId:
          type: number
        admissionYear:
          type: string
        photo:
          type: file
      example:
        kankorId: L2700283
        fullName: shamsullah shamsi
        fatherName: Abdul Rauf
        grandFatherName: Muhammad Tahir
        educationalYearId: 1

    EducationalYear:
      type: object
      properties:
        year:
          type: number
      example:
        year: 2019

    Semester:
      type: object
      properties:
        title:
          type: number
          enum: [1, 2, 3, 4, 5, 6, 7, 8]
        educationalYearId:
          type: number
        EducationalYear:
          $ref: '#/components/schemas/EducationalYear'
      example:
        title: 2
        educationalYearId: 1
        EducationalYear: { year: 2019 }

    Taajil:
      type: object
      properties:
        id:
          type: number
        studentId:
          type: string
        educationalYearId:
          $ref: '#/components/schemas/EducationalYear'
        regNumber:
          type: number
        attachment:
          type: string
        notes:
          type: string

      example:
        id: 1
        studentId: 1
        educationalYearId: 1
        regNumber: 459
        attachment: photo
        notes: Personal Problems

  responses:
    # Taajils related responses
    DuplicateTaajil:
      description: Duplicate Taajil for same student
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Student has already taken taajil
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    DuplicateDepartment:
      description: department name already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Department name already taken
    DuplicateYear:
      description: year is already created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 406
            message: Year is already
    DuplicateSemester:
      description: Semester is already created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 406
            message: Semester is already created
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    EducationalYear:
      type: object
      properties:
        year:
          type: number
      example:
        year: 2019
